basePath: /
host: 0.0.0.0:8080
info:
  contact: {}
  title: SGME API
  version: "1.0"
paths:
  /addFrontEpNodeRoute/{ns}/{svcname}/{frontid}/{ips}:
    get:
      consumes:
      - application/json
      description: /addFrontEpNodeRoute
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: 'front client ID '
        in: path
        name: frontid
        required: true
        type: string
      - description: endpoint IP addresses
        in: path
        name: ips
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: /addFrontEpNodeRoute
      tags:
      - serviceGovernance
  /addFrontEpNodeRoute/{ns}/{svcname}/{frontid}/{nodename}:
    get:
      consumes:
      - application/json
      description: /addFrontEpNodeRoute
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: 'front client ID '
        in: path
        name: frontid
        required: true
        type: string
      - description: node name
        in: path
        name: nodename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: /addFrontEpNodeRoute
      tags:
      - serviceGovernance
  /addServiceApidocUrl/{ns}/{svcname}/{apidocurl}:
    get:
      consumes:
      - application/json
      description: addServiceApidocUrl
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: api document url
        in: path
        name: apidocurl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: addServiceApidocUrl
  /circuitBreaker/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: circuitBreaker defines circuit breaker policy that applies to traffic
        intended for a service after routing has occurred.
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: circuitBreaker
      tags:
      - traffic governance
  /discoverGateway/{ns}:
    get:
      consumes:
      - application/json
      description: discoverGateway
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverGateway
  /discoverService/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: discoverService
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverService
      tags:
      - serviceGovernance
  /discoverServiceApidocUrl/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: discoverServiceApidocUrl
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverServiceApidocUrl
  /discoverServiceEndpoints/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: discoverServiceEndpoints
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverServiceEndpoints
      tags:
      - serviceGovernance
  /discoverServiceEndpoints/{ns}/{svcname}/{nodename}:
    get:
      consumes:
      - application/json
      description: discoverServiceEndpoints
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: nodename
        in: path
        name: ns
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverServiceEndpoints
      tags:
      - serviceGovernance
  /discoverServices/{ns}:
    get:
      consumes:
      - application/json
      description: discoverServices
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: discoverServices
      tags:
      - serviceGovernance
  /getGatewayAddrsAndPorts:
    get:
      consumes:
      - application/json
      description: getGatewayAddrsAndPorts
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: getGatewayAddrsAndPorts
  /getGatewayPort/{ns}:
    get:
      consumes:
      - application/json
      description: getGatewayPort
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: getGatewayPort
  /invokeService/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: invokeService
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: service path (ex. /path)
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: invokeService
      tags:
      - serviceGovernance
  /invokeServiceEndpoint:
    get:
      consumes:
      - application/json
      description: invokeServiceEndpoint
      parameters:
      - description: endpoint url (ex. http://POD_IP:PORT/path)
        in: query
        name: endpointurl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: invokeServiceEndpoint
      tags:
      - serviceGovernance
  /invokeServiceEndpointsByIps/{frontid}/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: invokeServiceEndpointsByIps
      parameters:
      - description: front ID
        in: path
        name: frontid
        required: true
        type: string
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: invokeServiceEndpointsByIps
      tags:
      - serviceGovernance
  /invokeServiceEndpointsInNode/{frontid}/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: invokeServiceEndpointsInNode
      parameters:
      - description: front ID
        in: path
        name: frontid
        required: true
        type: string
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      - description: path (ex. /path)
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: invokeServiceEndpointsInNode
      tags:
      - serviceGovernance
  /registerGateway/{ns}/{ip}:
    get:
      consumes:
      - application/json
      description: registerGateway
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: gateway external ip address
        in: path
        name: ip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: registerGateway
  /registerService/{ns}/{svcname}:
    get:
      consumes:
      - application/json
      description: registerService
      parameters:
      - description: namespace
        in: path
        name: ns
        required: true
        type: string
      - description: service name
        in: path
        name: svcname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
      summary: registerService
      tags:
      - serviceGovernance
  /test/{id}:
    get:
      consumes:
      - application/x-json-stream
      description: テスト用APIの詳細
      parameters:
      - description: 必須ではありません。
        in: query
        name: none
        type: string
      responses:
        "200":
          description: ""
swagger: "2.0"
tags:
- description: service registration/discovery/routing
  name: serviceGovernance
- description: traffic managemenet
  name: traffic governance
